{"ast":null,"code":"var COMPARE=1,SWAP=2,ALREDY_SORTED=3,NEW_SORTED_COLOR=4,PREVIOUS_COLOR=5;var insertionSort=function insertionSort(Arr){var objArr=[];var arr=Arr.slice();for(var i=0;i<arr.length;i++){for(var j=i+1;j<arr.length;j++){//COMPARE\nobjArr.push({case:COMPARE,start:i,end:j});if(arr[i]>arr[j]){//SWAP\nobjArr.push({case:SWAP,start:i,end:j,barOneHeight:\"\".concat(arr[j],\"px\"),barTwoHeight:\"\".concat(arr[i],\"px\")});var temp=arr[i];arr[i]=arr[j];arr[j]=temp;}else{//ALREDY SORTED\nobjArr.push({case:ALREDY_SORTED,start:i,end:j});}//PREVIOUS COLOR\nobjArr.push({case:PREVIOUS_COLOR,start:i,end:j});}//COLOR BARS WHICH IS NOW SORTED (FROM LEFT TO RIGHT IN INSERTION)\nobjArr.push({case:NEW_SORTED_COLOR,start:i});}return objArr;};module.exports=insertionSort;","map":{"version":3,"names":["COMPARE","SWAP","ALREDY_SORTED","NEW_SORTED_COLOR","PREVIOUS_COLOR","insertionSort","Arr","objArr","arr","slice","i","length","j","push","case","start","end","barOneHeight","concat","barTwoHeight","temp","module","exports"],"sources":["/workspaces/sorting-visualizer/src/Algorithms/sorting/insertionSort.js"],"sourcesContent":["const COMPARE = 1,\r\n    SWAP = 2,\r\n    ALREDY_SORTED = 3,\r\n    NEW_SORTED_COLOR = 4,\r\n    PREVIOUS_COLOR = 5;\r\n\r\nconst insertionSort = (Arr) => {\r\n    const objArr = []\r\n    let arr = Arr.slice();\r\n    for(let i=0;i<arr.length;i++){\r\n        for(let j=i+1;j<arr.length;j++){\r\n            //COMPARE\r\n            objArr.push({case : COMPARE,start : i,end : j})\r\n            if(arr[i]>arr[j]){\r\n                //SWAP\r\n                objArr.push({case : SWAP , start : i , end : j , barOneHeight : `${arr[j]}px`,barTwoHeight : `${arr[i]}px`})\r\n                const temp = arr[i];\r\n                arr[i]=arr[j];\r\n                arr[j]=temp;\r\n            }else {\r\n                //ALREDY SORTED\r\n                objArr.push({case: ALREDY_SORTED, start: i, end: j})\r\n            }\r\n            //PREVIOUS COLOR\r\n            objArr.push({case: PREVIOUS_COLOR, start: i, end: j})\r\n        }\r\n        //COLOR BARS WHICH IS NOW SORTED (FROM LEFT TO RIGHT IN INSERTION)\r\n        objArr.push({case : NEW_SORTED_COLOR,start : i})\r\n    }\r\n    return objArr;\r\n}\r\nmodule.exports = insertionSort;"],"mappings":"AAAA,GAAM,CAAAA,OAAO,CAAG,CAAC,CACbC,IAAI,CAAG,CAAC,CACRC,aAAa,CAAG,CAAC,CACjBC,gBAAgB,CAAG,CAAC,CACpBC,cAAc,CAAG,CAAC,CAEtB,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,GAAG,CAAK,CAC3B,GAAM,CAAAC,MAAM,CAAG,EAAE,CACjB,GAAI,CAAAC,GAAG,CAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CACrB,IAAI,GAAI,CAAAC,CAAC,CAAC,CAAC,CAACA,CAAC,CAACF,GAAG,CAACG,MAAM,CAACD,CAAC,EAAE,CAAC,CACzB,IAAI,GAAI,CAAAE,CAAC,CAACF,CAAC,CAAC,CAAC,CAACE,CAAC,CAACJ,GAAG,CAACG,MAAM,CAACC,CAAC,EAAE,CAAC,CAC3B;AACAL,MAAM,CAACM,IAAI,CAAC,CAACC,IAAI,CAAGd,OAAO,CAACe,KAAK,CAAGL,CAAC,CAACM,GAAG,CAAGJ,CAAC,CAAC,CAAC,CAC/C,GAAGJ,GAAG,CAACE,CAAC,CAAC,CAACF,GAAG,CAACI,CAAC,CAAC,CAAC,CACb;AACAL,MAAM,CAACM,IAAI,CAAC,CAACC,IAAI,CAAGb,IAAI,CAAGc,KAAK,CAAGL,CAAC,CAAGM,GAAG,CAAGJ,CAAC,CAAGK,YAAY,IAAAC,MAAA,CAAMV,GAAG,CAACI,CAAC,CAAC,MAAI,CAACO,YAAY,IAAAD,MAAA,CAAMV,GAAG,CAACE,CAAC,CAAC,MAAI,CAAC,CAAC,CAC5G,GAAM,CAAAU,IAAI,CAAGZ,GAAG,CAACE,CAAC,CAAC,CACnBF,GAAG,CAACE,CAAC,CAAC,CAACF,GAAG,CAACI,CAAC,CAAC,CACbJ,GAAG,CAACI,CAAC,CAAC,CAACQ,IAAI,CACf,CAAC,IAAK,CACF;AACAb,MAAM,CAACM,IAAI,CAAC,CAACC,IAAI,CAAEZ,aAAa,CAAEa,KAAK,CAAEL,CAAC,CAAEM,GAAG,CAAEJ,CAAC,CAAC,CAAC,CACxD,CACA;AACAL,MAAM,CAACM,IAAI,CAAC,CAACC,IAAI,CAAEV,cAAc,CAAEW,KAAK,CAAEL,CAAC,CAAEM,GAAG,CAAEJ,CAAC,CAAC,CAAC,CACzD,CACA;AACAL,MAAM,CAACM,IAAI,CAAC,CAACC,IAAI,CAAGX,gBAAgB,CAACY,KAAK,CAAGL,CAAC,CAAC,CAAC,CACpD,CACA,MAAO,CAAAH,MAAM,CACjB,CAAC,CACDc,MAAM,CAACC,OAAO,CAAGjB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}